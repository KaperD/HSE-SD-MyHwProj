/*
 * MyHwProj
 *
 * REST api for MyHwProj
 *
 * API version: 1.0.0
 * Contact: myhwproj@yandex.ru
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package myhwproj

import (
	"time"
)

type NewHomework struct {

	// Name of a new homework
	Name string `json:"name"`

	// Date and time of homework publication to students. If time zone is not specified, +3 is taken
	PublicationDatetime time.Time `json:"publicationDatetime"`

	// Command to check submissions
	Check string `json:"check"`

	// Description of the task
	Task string `json:"task"`

	// Deadline for students. If time zone is not specified, +3 is taken
	Deadline time.Time `json:"deadline"`
}

// AssertNewHomeworkRequired checks if the required fields are not zero-ed
func AssertNewHomeworkRequired(obj NewHomework) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"publicationDatetime": obj.PublicationDatetime,
		"check": obj.Check,
		"task": obj.Task,
		"deadline": obj.Deadline,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseNewHomeworkRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of NewHomework (e.g. [][]NewHomework), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseNewHomeworkRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aNewHomework, ok := obj.(NewHomework)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertNewHomeworkRequired(aNewHomework)
	})
}
